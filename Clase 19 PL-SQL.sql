-- VARRAY



-- ES UN TIPO DE COLECCIÓN QUE PERMITE ALMACENAR UN NÚMERO FIJO DE ELEMENTOS.




-- CARACTERISTICAS:


-- DEBE DECLARARSE CON UN TAMAÑO FIJO AL MOMENTO DE LA DEFINICIÓN.

-- MANTIENE EL ORDEN DE LOS ELEMENTOS Y NO PERMITE HUECOS ENTRE ELLOS.

-- SE PUEDE ALMACENAR EN UNA COLUMNA DE UNA TABLA DE BASE DE DATOS.

-- SE DEBE INICIALIZAR ANTES DE USAR, IGUAL QUE LAS TABLAS ANIDADAS.



-- SINTAXIS:

/*


TYPE NOMBRE_VARRAY IS VARRAY(N) OF TIPO_DE_DATO;   -- "N" ES EL NUMERO MAXIMO DE ELEMNETOS.

VARIABLE NOMBRE_VARRAY;


*/







-- EJEMPLO 1:


DECLARE

   TYPE VARRAY_NOMBRES IS VARRAY(5) OF VARCHAR2(50);
   
   V_NOMBRES VARRAY_NOMBRES;  

BEGIN

   V_NOMBRES := VARRAY_NOMBRES('Juan', 'María', 'Carlos','Marta','Miguel');    -- INICIALIZA EL VARRAY
									       -- SI METES MAS DE VALORES DE LOS ESTABLECIDOS, TE DARÁ ERROR

   FOR i IN 1..V_NOMBRES.COUNT LOOP

      DBMS_OUTPUT.PUT_LINE('Nombre ' || i || ': ' || V_NOMBRES(i));

   END LOOP;

END;







-- EJEMPLO 2:



CREATE OR REPLACE TYPE VARRAY_TELEFONOS AS VARRAY(3) OF NUMBER;


CREATE TABLE TRABAJADORES_EB (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    TELEFONOS VARRAY_TELEFONOS
);

INSERT INTO TRABAJADORES_EB VALUES (1, 'PEDRO LÓPEZ', VARRAY_TELEFONOS(123456, 789012));


SELECT T.ID, T.NOMBRE, E.COLUMN_VALUE AS TELEFONO  -- "COLUMN_VALUE" MUESTRA EL CADA DATO EN UNA FILA SEPARADA.
FROM TRABAJADORES_EB T, TABLE (T.TELEFONOS) E;     -- "TABLE(T.TELEFONOS)" EXPANDE LA VARIABLE COMO SI FUERA UNA TABLA.








-- EJEMPLO 3:


CREATE OR REPLACE TYPE VARRAY_HIJOS AS VARRAY(5) OF VARCHAR2(50);


CREATE TABLE PADRES_EB (
    ID NUMBER PRIMARY KEY,
    NOMBRE_PADRE VARCHAR2(50),
    HIJOS VARRAY_HIJOS
);



INSERT INTO PADRES_EB VALUES (1, 'Carlos Pérez', VARRAY_HIJOS('Juan', 'María'));
INSERT INTO PADRES_EB VALUES (2, 'Ana Gómez', VARRAY_HIJOS('Pedro', 'Luis', 'Elena'));
INSERT INTO PADRES_EB VALUES (3, 'Miguel Torres', NULL); -- NO TIENE HIJOS


SELECT P.ID, P.NOMBRE_PADRE, H.COLUMN_VALUE AS HIJO
FROM PADRES_EB P
LEFT JOIN TABLE(P.HIJOS) H ON P.ID = P.ID -- IMPRIME TAMBIEN LOS PADRES SIN HIJOS









